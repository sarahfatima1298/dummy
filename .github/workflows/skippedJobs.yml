name: Skipped Jobs Workflow

on:
  push:
    branches: ['main']
  workflow_dispatch:

jobs:
  job1:
    name: Job 1
    runs-on: ubuntu-latest
    steps:
      - name: Step 1 in Job 1
        run: echo "Running Job 1"

  # Parallel Skipped Jobs
  job2:
    name: Job 2 (Always Skipped)
    runs-on: ubuntu-latest
    if: false  # This ensures the job is always skipped
    needs: job1
    steps:
      - name: Step 1 in Job 2
        run: echo "This should not run"

  job3:
    name: Job 3 (Always Skipped)
    runs-on: ubuntu-latest
    if: false  # This ensures the job is always skipped
    needs: job1
    steps:
      - name: Step 1 in Job 3
        run: echo "This should not run"

  job4:
    name: Job 4
    runs-on: ubuntu-latest
    needs: job2  # Job 4 depends on Job 2 and Job 3, running them in parallel
    if: ${{ always() }}  # Ensures that job4 runs no matter what happens with job2 and job3
    steps:
      - name: Step 1 in Job 4 - Waiting for 30 seconds
        run: echo "Waiting for 30 seconds..." #&& sleep 60
      # - name: Step 2 in Job 4 - Always Fail
      #   run: |
      #     echo "This job is forced to fail."
      #     exit 1  # Force the job to fail every time

  # More Parallel Skipped Jobs
  job5:
    name: Job 5 (Always Skipped)
    runs-on: ubuntu-latest
    if: false  # This ensures the job is always skipped
    needs: job4
    steps:
      - name: Step 1 in Job 5
        run: echo "This should not run"

  job6:
    name: Job 6 (Always Skipped)
    runs-on: ubuntu-latest
    if: false  # This ensures the job is always skipped
    needs: job4
    steps:
      - name: Step 1 in Job 6
        run: echo "This should not run"

  # Sequential Skipped Jobs
  job7:
    name: Job 7 (Always Skipped)
    runs-on: ubuntu-latest
    if: false  # This ensures the job is always skipped
    needs: job6  # Job 7 depends on job5 and job6
    steps:
      - name: Step 1 in Job 7
        run: echo "This should not run"

  job8:
    name: Job 8 (Always Skipped)
    runs-on: ubuntu-latest
    if: false  # This ensures the job is always skipped
    needs: job7  # Job 8 depends on job7
    steps:
      - name: Step 1 in Job 8
        run: echo "This should not run"

  # More Parallel Skipped Jobs
  job9:
    name: Job 9 (Always Skipped)
    runs-on: ubuntu-latest
    if: false  # This ensures the job is always skipped
    needs: job8
    steps:
      - name: Step 1 in Job 9
        run: echo "This should not run"

  job10:
    name: Job 10 (Always Skipped)
    runs-on: ubuntu-latest
    if: false  # This ensures the job is always skipped
    needs: job8
    steps:
      - name: Step 1 in Job 10
        run: echo "This should not run"

  # Sequential Jobs
  job11:
    name: Job 11
    runs-on: ubuntu-latest
    needs: job9  # Job 11 depends on job9 and job10
    steps:
      - name: Step 1 in Job 11
        run: echo "Running Job 11 after job9 and job10"

  # job12:
  #   name: Job 12
  #   runs-on: ubuntu-latest
  #   if: ${{ !cancelled() }}
  #   needs: job11  # Job 12 depends on job11
  #   steps:
  #     - name: Step 1 in Job 12
  #       run: echo "Running Job 12 after job11"
  #     - name: Step 1 in Job 4 - Waiting for 30 seconds
  #       run: echo "Waiting for 30 seconds..." && sleep 60
